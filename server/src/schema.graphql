type Query {
    # All with / without query
    users(id:ID):[User!]!
    stores(query:String):[Store!]!
    departments(query:String,id:ID):[Department!]!
    categories(query:String,id:ID):[Category!]!
    products(query:String,id:ID):[Product!]!
    # shoppingCart(query:String):[Product]!
    # shoppingCart(query:String):[CartItem!]!
    userCartItems(query:ID):[Product!]!
    # Single 
    department:Department!
    category: Category!
    product:Product!
    cartItem:CartItem!
}

type Mutation {
    # shopping Cart
    addCartItem(data:AddCartItemInput):Product!
    deleteCartItem(data:DeleteCartItemInput):Product!
    # removeCartItem(id: ID!): Product!
    # updateCartItem(id: ID!, data: UpdateCartItemInput!): Product!
}

type Subscription{
    count:Int!
}

input AddCartItemInput {
    quantity:Int!
    user_id:ID!
    product_id:ID!
}
input DeleteCartItemInput{
    user_id:ID!
    product_id:ID!
}
# input UpdateUserInput {
#     email: String!
#     password:String!
# }

type User {
    id: ID!
    email: String!
    password:String!
    shoppingCart:[Product!]!
}

type Store{
    id:ID!
    name:String!
    building_number:String!
    street:String!
    city:String!
    postal_code:String!
    state:String!
    country:String!
}

type Department {
  id: ID!
  name: String!
  categories: [Category!]!
  products: [Product!]!
}
type Category {
  id: ID!
  name: String!
  department:Department!
  products: [Product!]!
}   

type Product {
    id:ID!
    name:String!
    description:String!
    price:Float! # to be chnaged to Int!
    quantity:Int!
    # user_id:ID!
    # product_id:ID!
    department:Department!
    category:Category!
}

type CartItem {
  id: ID!
  name: String!
  description: String!
  price: Float! # to be chnaged to Int!
  quantity: Int!
  user_id:ID!
  product_id:ID!
  department: Department!
  category: Category!
}







 



