type Query {
    # All with / without query
    users(query:String):[User!]!
    stores(query:String):[Store!]!
    departments(query:String):[Department!]!
    categories(query:String):[Category!]!
    products(query:String):[Product!]!
    shoppingCart(query:String):[Product!]!
    # userCartItems(query:ID):[Product!]!
    # Single 
    department:Department!
    category: Category!
    product:Product!
}

type Mutation {
    addCartItem(data: CreateCartInput!): Product!
    removeCartItem(id: ID!): Product!
    updateCartItem(id: ID!, data: UpdateUserInput!): Product!
}

input CreateCartInput {
    email: String!
    password:String!
}
input UpdateUserInput {
    email: String!
    password:String!
 
}

type User {
    id: ID!
    email: String!
    password:String!
    shoppingCart:[Product!]!
}

type Store{
    id:ID!
    name:String!
    building_number:String!
    street:String!
    city:String!
    postal_code:String!
    state:String!
    country:String!
}

type Department {
  id: ID!
  name: String!
  categories: [Category!]!
  products: [Product!]!
}
type Category {
  id: ID!
  name: String!
  department:Department!
  products: [Product!]!
}   

type Product {
    id:ID!
    name:String!
    description:String!
    price:Float! # to be chnaged to Int!
    depart:Department!
    category:Category!
}




 



